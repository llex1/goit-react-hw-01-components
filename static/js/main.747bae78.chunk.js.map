{"version":3,"sources":["App/components/Profile/Profile.module.css","App/components/Statistics/Statistics.module.css","App/components/FriendList/FriendList.module.css","App/components/TransactionHistory/TransactionHistory.module.css","App/components/Profile/Profile.jsx","App/components/Statistics/Statistics.jsx","App/components/FriendList/FriendList.jsx","App/components/TransactionHistory/TransactionHistory.jsx","App/App.jsx","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","Object","entries","map","el","i","label","toUpperCase","slice","quantity","Statistics","title","dataOut","forEach","percentage","statistics","statList","item","FriendList","friends","friendList","status","data-status","isOnline","width","id","TransactionHistory","items","transactionHistory","type","amount","currency","App","props","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.747bae78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__ErNh6\",\"description\":\"Profile_description__3ZokM\",\"avatar\":\"Profile_avatar__3SxgY\",\"name\":\"Profile_name__2KR13\",\"tag\":\"Profile_tag__1e4Rv\",\"location\":\"Profile_location__3Q4WX\",\"label\":\"Profile_label__3P6hO\",\"stats\":\"Profile_stats__2bb4f\",\"quantity\":\"Profile_quantity__k9o3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__SE2Lm\",\"statList\":\"Statistics_statList__8jqkg\",\"item\":\"Statistics_item__1oIsP\",\"label\":\"Statistics_label__1OjJl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3GVx1\",\"item\":\"FriendList_item__lNRTC\",\"status\":\"FriendList_status__Pu-S3\",\"avatar\":\"FriendList_avatar__KLOni\",\"name\":\"FriendList_name__89N_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1WYdg\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nfunction Profile({name, tag, location, avatar, stats}) {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img\n          src={avatar}\n          alt=\"Аватар пользователя\"\n          className={styles.avatar}\n        />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n      <ul className={styles.stats}>\n      {/* створюю масив з парами ключ/значення та перебираю його */}\n      {Object.entries(stats).map( (el, i) => (\n          <li key={i}>\n            <span className={styles.label}>{el[0][0].toUpperCase() + el[0].slice(1)}</span>\n            <span className={styles.quantity}>{el[1]}</span>\n          </li>\n          )\n        )\n      }\n      </ul>\n    </div>\n  )\n}\nProfile.propTypes = {\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.object\n}\n\nexport default Profile","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css'; \n\nfunction Statistics({title, stats}) {\n  const dataOut = {};\n  // новий об'єкт з унікальними ключами які сумують значення з вхідного об'єкту\n  stats.forEach(el => {\n      dataOut[el.label] ? dataOut[el.label] += el.percentage : dataOut[el.label] = el.percentage;\n  }) \n  return (\n    <section className={styles.statistics}>\n      <h2 className={styles.title}>{title}</h2>\n\n      <ul className={styles.statList}>\n      {/* створюю масив з парами ключ/значення та перебираю його */}\n      {Object.entries(dataOut).map( (el, i) => (\n          <li className={styles.item} key={i}>\n            <span className={styles.label}>{el[0]}</span>\n            <span className={styles.percentage}>{el[1]}%</span>\n          </li>\n          )\n        )\n      }\n      </ul>\n    </section>\n  )\n}\nStatistics.propTypes = {\n  friends: PropTypes.array\n}\n\n\nexport default Statistics","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\nfunction FriendList({friends}) {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(el => (\n            <li className={styles.item} key={el.id}>\n              <span className={styles.status} data-status={el.isOnline}></span>\n              <img className={styles.avatar} src={el.avatar} alt={el.name} width=\"48\" />\n              <p className={styles.name}>{el.name}</p>\n            </li>\n          )\n        )\n      }\n    </ul>\n  )\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.array\n}\n\n\nexport default FriendList","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nfunction TransactionHistory({items}) {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map( el => (\n            <tr key={el.id}>\n              <td>{el.type}</td>\n              <td>{el.amount}</td>\n              <td>{el.currency}</td>\n            </tr>\n            )\n          )\n        }\n      </tbody>\n    </table>\n  )\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.array\n}\n\nexport default TransactionHistory","import React, { Fragment } from 'react';\n\n// JSX modules\nimport Profile from './components/Profile/';\nimport Statistics from './components/Statistics';\nimport FriendList from './components/FriendList';\nimport TransactionHistory from './components/TransactionHistory';\n\n// data\nimport user from '../data/user.json';\nimport statisticalData from '../data/statistical-data.json';\nimport friends from '../data/friends.json';\nimport transactions from '../data/transactions.json';\n\nimport './App.css';\n\nconst App = function(props) {\n  return (\n    <Fragment >\n      <Profile \n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends}/>\n      <TransactionHistory items={transactions} />\n    </Fragment>\n  )\n}\n\nexport default App\n// P.S: Сашка, дякую за ресурс по React.\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}